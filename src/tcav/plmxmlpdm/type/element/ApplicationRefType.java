//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b24-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.07.22 at 11:41:15 AM EST 
//


package tcav.plmxmlpdm.type.element;

import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.NamedNodeMap;
import tcav.plmxmlpdm.*;
import tcav.plmxmlpdm.base.IdBase;

/**
 * 
 *       The ApplicationRef element is meant to relate the parent element (Product, 
 *       Representation, etc) back to the owning entity in the sending  application.
 * 
 *       Attributes:
 * 
 *       application:  the context in which the contents of the label and version attributes 
 *                     make sense. Whether this field includes an application version number 
 *                     is up to the application, as long as it starts with something 
 *                     identifiable to the sending application.
 * 
 *       label:        the string which identifies the application entity - the value of
 *                     this field is only meaningful to the sending/authoring application.
 *                     The receiving application can compare the contents of the attribute
 *                     to test if two entities are the 'same' entity. But the actual value
 *                     is meaningless to the receiving application.
 * 
 *       version:      the optional string attribute which identifies the version of the
 *                     application entity. This attribute can only be used to test if the
 *                     versions of an entity are the same (i.e. the test is only meaningful
 *                     if the label attribute values are the same). No version ordering can
 *                     be deduced from the value. Similar to the label attribute, the 
 *                     version attribute contents are meaningless to the receiving 
 *                     application.
 *       
 * 
 * <p>Java class for ApplicationRefType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ApplicationRefType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="application" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="label" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="version" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
//@XmlAccessorType(XmlAccessType.FIELD)
//@XmlType(name = "ApplicationRefType")
public class ApplicationRefType extends IdBase {

    //@XmlAttribute
    protected final String applicationAttribute = "application";
    protected String application;
    
    //@XmlAttribute(required = true)
    protected final String labelAttribute = "label";
    protected String label;
    
    //@XmlAttribute
    protected final String versionAttribute = "version";
    protected String version;
    
    
    public ApplicationRefType(Node node) {
        NamedNodeMap attrib = node.getAttributes();
        
        setApplication(TagTools.getStringValue(attrib, applicationAttribute));
        setLabel(TagTools.getStringValue(attrib, labelAttribute));
        setVersion(TagTools.getStringValue(attrib, versionAttribute));

        setTagType(TagTypeEnum.ApplicationRef);
    }

    /**
     * Gets the value of the application property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getApplication() {
        return application;
    }

    /**
     * Sets the value of the application property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setApplication(String value) {
        this.application = value;
    }

    /**
     * Gets the value of the label property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLabel() {
        return label;
    }

    /**
     * Sets the value of the label property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLabel(String value) {
        this.label = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

}
