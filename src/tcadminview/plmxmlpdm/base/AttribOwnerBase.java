//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b24-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.07.22 at 11:41:15 AM EST 
//


package tcadminview.plmxmlpdm.base;

import java.util.ArrayList;
import java.util.List;

import tcadminview.plmxmlpdm.TagTools;
import tcadminview.plmxmlpdm.TagTypeEnum;
import tcadminview.plmxmlpdm.type.UserDataType;
import tcadminview.plmxmlpdm.type.AssociatedDataSetType;
import tcadminview.plmxmlpdm.type.AssociatedFormType;
import tcadminview.plmxmlpdm.type.AssociatedFolderType;
import tcadminview.plmxmlpdm.type.ValidationResultsType;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.NamedNodeMap;

/*
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlType;
*/

/**
 * 
 *       Base class for elements which have PLMXML Attributes, i.e. elements
 *       derived from plm:AttributeBase.
 *       
 *       Attributes:
 *         
 *       attributeRefs: reference to Attributes
 *                
 *       Elements:
 *       
 *       Attribute:     any element derived from AttributeBase.
 *       
 * 
 * <p>Java class for AttribOwnerBase complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AttribOwnerBase">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.plmxml.org/Schemas/PLMXMLSchema}DescriptionBase">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.plmxml.org/Schemas/PLMXMLSchema}Attribute" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="attributeRefs" type="{http://www.w3.org/2001/XMLSchema}IDREFS" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
//@XmlAccessorType(XmlAccessType.FIELD)
/*
  @XmlType(name = "AttribOwnerBase", propOrder = {
    "attribute"
})
 */
public abstract class AttribOwnerBase extends DescriptionBase {

    //@XmlElementRef(name = "Attribute", namespace = "http://www.plmxml.org/Schemas/PLMXMLSchema", type = JAXBElement.class)
    protected List<AttributeBase> attribute;
    
    //@XmlAttribute
    //@XmlIDREF
    protected List<Object> attributeRefs;
    
    public AttribOwnerBase(Node node) {
        super(node);
        Node currentNode = node;
        NamedNodeMap attrib = currentNode.getAttributes();
        NodeList nodeList = currentNode.getChildNodes();
        
        TagTypeEnum tagType;
        for (int i=0; i<nodeList.getLength(); i++) {
            currentNode = nodeList.item(i);
            tagType = TagTypeEnum.fromValue(currentNode.getNodeName());
            
            switch(tagType) {
                case UserData:          // Set AttribOwnerBase Node
                    getAttribute().add(new UserDataType(currentNode));
                    break;
                    
                case AssociatedDataSet:
                    getAttribute().add(new AssociatedDataSetType(currentNode));
                    break;
                    
                case AssociatedFolder:
                    getAttribute().add(new AssociatedFolderType(currentNode));
                    break;
                    
                case AssociatedForm:
                    getAttribute().add(new AssociatedFormType(currentNode));
                    break;
                    
                case ValidationResults:
                    getAttribute().add(new ValidationResultsType(currentNode));
                    break;
                    
                default:
                    //System.out.println("AttribOwnerBase: "+currentNode.getNodeName());
                    break;
            }        
        }
    }

    /**
     * Gets the value of the attribute property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attribute property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttribute().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link AssociatedFormType }{@code >}
     * {@link JAXBElement }{@code <}{@link UserListDataType }{@code >}
     * {@link JAXBElement }{@code <}{@link MarkupType }{@code >}
     * {@link JAXBElement }{@code <}{@link AttributeBase }{@code >}
     * {@link JAXBElement }{@code <}{@link UserDataType }{@code >}
     * {@link JAXBElement }{@code <}{@link AssociatedDataSetType }{@code >}
     * {@link JAXBElement }{@code <}{@link MassPropertiesType }{@code >}
     * {@link JAXBElement }{@code <}{@link EntityUserDataType }{@code >}
     * {@link JAXBElement }{@code <}{@link AssociatedFolderType }{@code >}
     * {@link JAXBElement }{@code <}{@link ValidationResultsType }{@code >}
     * 
     * 
     */
    public List<AttributeBase> getAttribute() {
        if (attribute == null) {
            attribute = new ArrayList<AttributeBase>();
        }
        return this.attribute;
    }

    /**
     * Gets the value of the attributeRefs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attributeRefs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttributeRefs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * 
     * 
     */
    public List<Object> getAttributeRefs() {
        if (attributeRefs == null) {
            attributeRefs = new ArrayList<Object>();
        }
        return this.attributeRefs;
    }

}
