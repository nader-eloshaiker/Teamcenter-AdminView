//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b24-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.07.22 at 11:41:15 AM EST 
//


package tceav.manager.procedure.plmxmlpdm.type.element;

import org.w3c.dom.Node;
import org.w3c.dom.NamedNodeMap;
import tceav.xml.TagTools;
import tceav.manager.procedure.plmxmlpdm.ProcedureTagTypeEnum;
import tceav.manager.procedure.plmxmlpdm.base.IdBase;

/**
 * 
 *       This element defines a single entry in a UserList. The 'value' attribute 
 *       must contain data of the type specified by the 'type' attribute in the owning list.
 * 
 *       Attributes:
 * 
 *       value:          data value (required).
 *       description:    textual description of the value.
 *       
 * 
 * <p>Java class for UserListElementType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="UserListElementType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="description" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="value" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
//@XmlAccessorType(XmlAccessType.FIELD)
//@XmlType(name = "UserListElementType")
public class UserListElementType extends IdBase {

    //@XmlAttribute
    protected final String descriptionAttribute = "description";
    protected String description;
    
    //@XmlAttribute(required = true)
    protected final String valueAttribute = "value";
    protected String value;
    
    public UserListElementType(Node node) {
        Node currentNode = node;
        NamedNodeMap attrib = node.getAttributes();
        
         setDescription(TagTools.getStringValue(attrib, descriptionAttribute));
         setValue(TagTools.getStringValue(attrib, valueAttribute));
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the value property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValue(String value) {
        this.value = value;
    }

}
