//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b24-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.07.22 at 11:41:15 AM EST 
//


package tceav.manager.procedure.plmxmlpdm.type;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import tceav.manager.procedure.plmxmlpdm.TagTools;
import tceav.manager.procedure.plmxmlpdm.TagTypeEnum;
import tceav.manager.procedure.plmxmlpdm.base.AttribOwnerBase;

import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.NamedNodeMap;

/*
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
*/

/**
 * 
 *       A WorkflowBusinessRule represents some conditions that must be met to perform a workflow
 *       action. It consists of one or more WorkflowBusinessRuleHandlers, and a rule quorum 
 *       specifying the number of rule handlers that must return go for the workflow action to 
 *       complete. It also has a back pointer to its parent workflow action object.
 *       
 * 
 * <p>Java class for WorkflowBusinessRuleType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="WorkflowBusinessRuleType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.plmxml.org/Schemas/PLMXMLSchema}AttribOwnerBase">
 *       &lt;attribute name="parentRef" type="{http://www.plmxml.org/Schemas/PLMXMLSchema}anyURIType" />
 *       &lt;attribute name="ruleHandlerRefs" type="{http://www.plmxml.org/Schemas/PLMXMLSchema}uriReferenceListType" />
 *       &lt;attribute name="ruleQuorum" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
//@XmlAccessorType(XmlAccessType.FIELD)
//@XmlType(name = "WorkflowBusinessRuleType")
public class WorkflowBusinessRuleType extends AttribOwnerBase {

    //@XmlAttribute
    protected final String parentRefAttribute = "parentRef";
    protected String parentRef;
    
    //@XmlAttribute
    protected final String ruleHandlerRefsAttribute = "ruleHandlerRefs";
    protected List<String> ruleHandlerRefs;
    
    //@XmlAttribute(required = true)
    protected final String ruleQuorumAttribute = "ruleQuorum";
    protected Integer ruleQuorum;
    
    
    public WorkflowBusinessRuleType(Node node) {
        super(node);
        Node currentNode = node;
        NamedNodeMap attrib = currentNode.getAttributes();
        NodeList nodeList = currentNode.getChildNodes();

        setRuleQuorum(TagTools.getIntegerValue(attrib, ruleQuorumAttribute));
        setParentRef(TagTools.getStringValue(attrib, parentRefAttribute));
        
        TagTools.addToList(attrib, ruleHandlerRefsAttribute, getRuleHandlerRefs());

        setTagType(TagTypeEnum.WorkflowBusinessRule);
    }

    public String getParentRef() {
        return parentRef;
    }

    public void setParentRef(String value) {
        this.parentRef = value;
    }

    public List<String> getRuleHandlerRefs() {
        if (ruleHandlerRefs == null) {
            ruleHandlerRefs = new ArrayList<String>();
        }
        return this.ruleHandlerRefs;
    }

    public Integer getRuleQuorum() {
        return ruleQuorum;
    }

    public void setRuleQuorum(Integer value) {
        this.ruleQuorum = value;
    }

    /***************
     * Customisation
     ***************/
    private WorkflowBusinessRuleHandlerType[] businessRuleHandlers;

    public WorkflowBusinessRuleHandlerType[] getRuleHandlers() {
        if(businessRuleHandlers == null)
            businessRuleHandlers = new WorkflowBusinessRuleHandlerType[getRuleHandlerRefs().size()];
        
        return businessRuleHandlers;
    }
}
