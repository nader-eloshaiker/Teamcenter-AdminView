//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b24-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.07.22 at 11:41:15 AM EST 
//


package tceav.manager.procedure.plmxmlpdm.type;

import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.NamedNodeMap;
import tceav.xml.TagTools;
import tceav.manager.procedure.plmxmlpdm.ProcedureTagTypeEnum;

/*
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
*/

/**
 * <p>Java class for WorkflowBusinessRuleHandlerType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="WorkflowBusinessRuleHandlerType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.plmxml.org/Schemas/PLMXMLSchema}WorkflowHandlerType">
 *       &lt;attribute name="negated" type="{http://www.w3.org/2001/XMLSchema}Boolean" default="false" />
 *       &lt;attribute name="override" type="{http://www.w3.org/2001/XMLSchema}Boolean" default="false" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
//@XmlAccessorType(XmlAccessType.FIELD)
//@XmlType(name = "WorkflowBusinessRuleHandlerType")
public class WorkflowBusinessRuleHandlerType extends WorkflowHandlerType {

    //@XmlAttribute
    protected final String negatedAttribute = "negated";
    protected Boolean negated;
    
    //@XmlAttribute
    protected final String overrideAttribute = "override";
    protected Boolean override;
    
    
    public WorkflowBusinessRuleHandlerType(Node node) {
        super(node);
        Node currentNode = node;
        NamedNodeMap attrib = currentNode.getAttributes();
        
         setNegated(TagTools.getBooleanValue(attrib, negatedAttribute));
         setOverride(TagTools.getBooleanValue(attrib, overrideAttribute));
    }

    public Boolean isNegated() {
        if (negated == null) {
            return false;
        } else {
            return negated;
        }
    }

    public void setNegated(Boolean value) {
        this.negated = value;
    }

    public Boolean isOverride() {
        if (override == null) {
            return false;
        } else {
            return override;
        }
    }

    public void setOverride(Boolean value) {
        this.override = value;
    }

}
